{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport WelcomeComponent from \"@/components/Welcome.vue\";\nlet pieOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [{\n    name: '',\n    // 鼠标移上去显示内容\n    type: 'pie',\n    radius: '50%',\n    center: ['50%', '60%'],\n    data: [{\n      value: 1048,\n      name: '瑞幸咖啡'\n    },\n    // 示例数据：name表示维度，value表示对应的值\n    {\n      value: 735,\n      name: '雀巢咖啡'\n    }, {\n      value: 580,\n      name: '星巴克咖啡'\n    }, {\n      value: 484,\n      name: '栖巢咖啡'\n    }, {\n      value: 300,\n      name: '小武哥咖啡'\n    }]\n  }]\n};\nlet lineOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    // 示例数据：横坐标维度对应的值（纵坐标）\n    type: 'line'\n  }]\n};\nlet barOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    // 示例数据：横坐标维度对应的值（纵坐标）\n    type: 'bar',\n    itemStyle: {\n      normal: {\n        color: function () {\n          return \"#\" + Math.floor(Math.random() * (256 * 256 * 256 - 1)).toString(16);\n        }\n      }\n    }\n  }]\n};\nlet barSalaryOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    // 示例数据：横坐标维度对应的值（纵坐标）\n    type: 'bar',\n    itemStyle: {\n      normal: {\n        color: function () {\n          return \"#\" + Math.floor(Math.random() * (256 * 256 * 256 - 1)).toString(16);\n        }\n      }\n    }\n  }]\n};\nexport default {\n  name: 'Home',\n  components: {\n    WelcomeComponent\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      month: null,\n      monthData: [],\n      departmentInfo: {\n        name: '',\n        employeeCount: 0,\n        headerName: ''\n      },\n      pendingTasks: {\n        askCount: 0,\n        resourceCount: 0\n      },\n      personalTasks: {\n        total: 0,\n        approved: 0,\n        pending: 0,\n        rejected: 0\n      },\n      departmentEmployees: []\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  },\n  created() {\n    this.loadNotices();\n    if (this.user.role === 'ADMIN') {\n      this.getMonthData();\n      this.getFinancialPie();\n      this.getFinancialLine();\n      this.getFinancialBar();\n    } else if (this.isHeader) {\n      this.loadDepartmentInfo();\n      this.loadPendingTasks();\n      this.loadDepartmentEmployees();\n    } else if (this.user.role === 'USER') {\n      this.loadDepartmentInfo();\n      this.loadPersonalTasks();\n    }\n  },\n  methods: {\n    loadNotices() {\n      this.$request.get('/notice/selectAll').then(res => {\n        if (res.code === '200') {\n          this.notices = res.data || [];\n        } else {\n          this.$message.error('获取公告列表失败: ' + res.msg);\n          this.notices = [];\n        }\n      }).catch(error => {\n        console.error('获取公告列表失败:', error);\n        this.$message.error('获取公告列表时发生网络错误');\n        this.notices = [];\n      });\n    },\n    getMonthData() {\n      this.$request.get('/salary/getMonth').then(res => {\n        if (res.code === '200') {\n          this.monthData = res.data;\n          this.month = this.monthData[0].year;\n          this.getSalaryMonth(this.month);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getSalaryMonth(month) {\n      this.$request.get('/salary/getSalary/' + month).then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('salaryBar');\n          let myChart = echarts.init(chartDom);\n          barSalaryOptions.title.text = res.data.text;\n          barSalaryOptions.title.subtext = res.data.subtext;\n          barSalaryOptions.xAxis.data = res.data.xAxis;\n          barSalaryOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barSalaryOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialPie() {\n      this.$request.get('/financial/getPie').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          pieOptions.title.text = res.data.text;\n          pieOptions.title.subtext = res.data.subtext;\n          pieOptions.series[0].name = res.data.name;\n          pieOptions.series[0].data = res.data.data;\n          myChart.setOption(pieOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialLine() {\n      this.$request.get('/financial/getLine').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          lineOptions.title.text = res.data.text;\n          lineOptions.title.subtext = res.data.subtext;\n          lineOptions.xAxis.data = res.data.xAxis;\n          lineOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(lineOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialBar() {\n      this.$request.get('/financial/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text;\n          barOptions.title.subtext = res.data.subtext;\n          barOptions.xAxis.data = res.data.xAxis;\n          barOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barOptions);\n        }\n      });\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200') {\n            this.departmentInfo.name = res.data.name;\n            this.departmentInfo.headerName = res.data.headerName || '未指定';\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentInfo.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量失败，请检查网络连接\");\n      });\n    },\n    loadPendingTasks() {\n      this.loadPendingAskTasks();\n      this.loadPendingResourceTasks();\n    },\n    loadPendingAskTasks() {\n      this.$request.get('/askapply/countPending', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.askCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批请假数据失败:\", error);\n        this.$message.error(\"获取待审批请假数据失败，请检查网络连接\");\n      });\n    },\n    loadPendingResourceTasks() {\n      this.$request.get('/resourceapply/countPending', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.resourceCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批资产数据失败:\", error);\n        this.$message.error(\"获取待审批资产数据失败，请检查网络连接\");\n      });\n    },\n    loadDepartmentEmployees() {\n      this.$request.get('/employee/selectByDepartment', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentEmployees = res.data || [];\n        }\n      }).catch(error => {\n        console.error(\"获取部门员工列表失败:\", error);\n        this.$message.error(\"获取部门员工列表失败，请检查网络连接\");\n      });\n    },\n    loadPersonalTasks() {\n      this.$request.get('/employee/applicationStats', {\n        params: {\n          employeeId: this.user.id\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.personalTasks = res.data || {\n            total: 0,\n            approved: 0,\n            pending: 0,\n            rejected: 0\n          };\n        }\n      }).catch(error => {\n        console.error(\"获取个人申请统计数据失败:\", error);\n        this.$message.error(\"获取个人申请统计数据失败，请检查网络连接\");\n      });\n    },\n    goToEmployeeList() {\n      this.$router.push('/user');\n    }\n  }\n};","map":{"version":3,"names":["echarts","WelcomeComponent","pieOptions","title","text","subtext","left","tooltip","trigger","formatter","legend","orient","series","name","type","radius","center","data","value","lineOptions","xAxis","yAxis","barOptions","itemStyle","normal","color","Math","floor","random","toString","barSalaryOptions","components","user","JSON","parse","localStorage","getItem","notices","month","monthData","departmentInfo","employeeCount","headerName","pendingTasks","askCount","resourceCount","personalTasks","total","approved","pending","rejected","departmentEmployees","computed","isHeader","level","role","includes","created","loadNotices","getMonthData","getFinancialPie","getFinancialLine","getFinancialBar","loadDepartmentInfo","loadPendingTasks","loadDepartmentEmployees","loadPersonalTasks","methods","$request","get","then","res","code","$message","error","msg","catch","console","year","getSalaryMonth","chartDom","document","getElementById","myChart","init","setOption","departmentId","loadEmployeeCount","params","loadPendingAskTasks","loadPendingResourceTasks","employeeId","id","goToEmployeeList","$router","push"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 主管仪表盘 -->\n    <div v-if=\"isHeader\" class=\"dashboard-header\">\n      <el-card style=\"margin-bottom: 20px\">\n        <welcome-component :department-name=\"departmentInfo.name\" :department-header=\"departmentInfo.headerName\"></welcome-component>\n      </el-card>\n      \n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-s-custom\"></i> 部门管理</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ departmentInfo.name || '暂无数据' }}</div>\n              <div class=\"dashboard-title\">当前管理部门</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-user\"></i> 员工管理</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ departmentInfo.employeeCount || 0 }}</div>\n              <div class=\"dashboard-title\">部门员工数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-s-claim\"></i> 待办事项</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ pendingTasks.askCount + pendingTasks.resourceCount }}</div>\n              <div class=\"dashboard-title\">待审批事项</div>\n              <div class=\"dashboard-detail\">\n                <el-tag size=\"small\" type=\"warning\">请假审批: {{ pendingTasks.askCount }}</el-tag>\n                <el-tag size=\"small\" type=\"warning\" style=\"margin-left: 10px\">资产审批: {{ pendingTasks.resourceCount }}</el-tag>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-s-grid\"></i> 部门员工</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goToEmployeeList\">查看全部</el-button>\n          </div>\n          <el-table :data=\"departmentEmployees\" stripe style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\n            <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\n            <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n            <el-table-column prop=\"level\" label=\"级别\">\n              <template slot-scope=\"scope\">\n                <el-tag size=\"mini\" v-if=\"scope.row.level === 'HEADER'\" type=\"success\">部门主管</el-tag>\n                <el-tag size=\"mini\" v-else-if=\"scope.row.level === 'EMPLOYEE'\" type=\"info\">普通员工</el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </div>\n\n      <!-- 公告列表 for Header -->\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-bell\"></i> 最新公告</span>\n          </div>\n          <el-timeline reverse>\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </el-card>\n      </div>\n    </div>\n\n    <!-- 员工仪表盘 -->\n    <div v-else-if=\"user.role === 'USER'\" class=\"dashboard-employee\">\n      <el-card style=\"margin-bottom: 20px\">\n        <welcome-component></welcome-component>\n      </el-card>\n\n      <!-- 公告列表 for User -->\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-bell\"></i> 最新公告</span>\n          </div>\n          <el-timeline reverse>\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </el-card>\n      </div>\n    </div>\n\n    <!-- 管理员仪表盘 -->\n    <div v-else>\n      <div class=\"card\" style=\"padding: 15px\">\n        您好，{{ user?.name }}！欢迎使用本系统\n      </div>\n\n      <div style=\"display: flex; margin: 10px 0\">\n        <div style=\"width: 100%;\" class=\"card\">\n          <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\n          <div>\n            <el-timeline  reverse slot=\"reference\">\n              <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n                <el-popover\n                    placement=\"right\"\n                    width=\"200\"\n                    trigger=\"hover\"\n                    :content=\"item.content\">\n                  <span slot=\"reference\">{{ item.title }}</span>\n                </el-popover>\n              </el-timeline-item>\n            </el-timeline>\n          </div>\n        </div>\n      </div>\n      <div style=\"display: flex\" v-if=\"user.role === 'ADMIN'\">\n        <div id=\"pie\" style=\"height: 450px; flex: 1\" class=\"card\"></div>\n        <div style=\"height: 450px; flex: 1;\" class=\"card\">\n          <el-select v-model=\"month\" style=\"width: 50%\" @change=\"getSalaryMonth(month)\">\n            <el-option v-for=\"item in monthData\" :key=\"item.year\" :label=\"item.year\" :value=\"item.year\"></el-option>\n          </el-select>\n          <div id=\"salaryBar\" style=\"height: 400px; padding-top: 15px\"></div>\n        </div>\n      </div>\n      <div style=\"margin-top: 10px; display: flex\" v-if=\"user.role === 'ADMIN'\">\n        <div id=\"line\" style=\"height: 400px; flex: 1\" class=\"card\"></div>\n        <div id=\"bar\" style=\"height: 400px; flex: 1\" class=\"card\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nimport WelcomeComponent from \"@/components/Welcome.vue\";\n\nlet pieOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      name: '', // 鼠标移上去显示内容\n      type: 'pie',\n      radius: '50%',\n      center: ['50%', '60%'],\n      data: [\n        {value: 1048, name: '瑞幸咖啡'}, // 示例数据：name表示维度，value表示对应的值\n        {value: 735, name: '雀巢咖啡'},\n        {value: 580, name: '星巴克咖啡'},\n        {value: 484, name: '栖巢咖啡'},\n        {value: 300, name: '小武哥咖啡'}\n      ]\n    }\n  ]\n}\nlet lineOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130], // 示例数据：横坐标维度对应的值（纵坐标）\n      type: 'line',\n    }\n  ]\n}\nlet barOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130], // 示例数据：横坐标维度对应的值（纵坐标）\n      type: 'bar',\n      itemStyle: {\n        normal: {\n          color:function(){return \"#\"+Math.floor(Math.random()*(256*256*256-1)).toString(16);}\n        },\n      },\n    }\n  ]\n}\nlet barSalaryOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n  yAxis: {\n    type: 'value'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130], // 示例数据：横坐标维度对应的值（纵坐标）\n      type: 'bar',\n      itemStyle: {\n        normal: {\n          color:function(){return \"#\"+Math.floor(Math.random()*(256*256*256-1)).toString(16);}\n        },\n      },\n    }\n  ]\n}\n\nexport default {\n  name: 'Home',\n  components: {\n    WelcomeComponent\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      month: null,\n      monthData: [],\n      departmentInfo: {\n        name: '',\n        employeeCount: 0,\n        headerName: ''\n      },\n      pendingTasks: {\n        askCount: 0,\n        resourceCount: 0\n      },\n      personalTasks: {\n        total: 0,\n        approved: 0,\n        pending: 0,\n        rejected: 0\n      },\n      departmentEmployees: []\n    }\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || \n             this.user.role === 'HEADER' || \n             (this.user.level && this.user.level.includes('主管'));\n    }\n  },\n  created() {\n    this.loadNotices();\n    \n    if (this.user.role === 'ADMIN') {\n      this.getMonthData()\n      this.getFinancialPie()\n      this.getFinancialLine()\n      this.getFinancialBar()\n    } else if (this.isHeader) {\n      this.loadDepartmentInfo();\n      this.loadPendingTasks();\n      this.loadDepartmentEmployees();\n    } else if (this.user.role === 'USER') {\n      this.loadDepartmentInfo();\n      this.loadPersonalTasks();\n    }\n  },\n  methods: {\n    loadNotices() {\n      this.$request.get('/notice/selectAll').then(res => {\n        if (res.code === '200') {\n          this.notices = res.data || [];\n        } else {\n          this.$message.error('获取公告列表失败: ' + res.msg);\n          this.notices = [];\n        }\n      }).catch(error => {\n        console.error('获取公告列表失败:', error);\n        this.$message.error('获取公告列表时发生网络错误');\n        this.notices = [];\n      });\n    },\n    getMonthData() {\n      this.$request.get('/salary/getMonth').then(res => {\n        if (res.code === '200') {\n          this.monthData = res.data\n          this.month = this.monthData[0].year\n          this.getSalaryMonth(this.month)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getSalaryMonth(month) {\n      this.$request.get('/salary/getSalary/' + month).then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('salaryBar');\n          let myChart = echarts.init(chartDom);\n          barSalaryOptions.title.text = res.data.text\n          barSalaryOptions.title.subtext = res.data.subtext\n          barSalaryOptions.xAxis.data = res.data.xAxis\n          barSalaryOptions.series[0].data = res.data.yAxis\n          myChart.setOption(barSalaryOptions)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialPie() {\n      this.$request.get('/financial/getPie').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          pieOptions.title.text = res.data.text\n          pieOptions.title.subtext = res.data.subtext\n          pieOptions.series[0].name = res.data.name\n          pieOptions.series[0].data = res.data.data\n          myChart.setOption(pieOptions);\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialLine() {\n      this.$request.get('/financial/getLine').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          lineOptions.title.text = res.data.text\n          lineOptions.title.subtext = res.data.subtext\n          lineOptions.xAxis.data = res.data.xAxis\n          lineOptions.series[0].data = res.data.yAxis\n          myChart.setOption(lineOptions)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialBar() {\n      this.$request.get('/financial/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text\n          barOptions.title.subtext = res.data.subtext\n          barOptions.xAxis.data = res.data.xAxis\n          barOptions.series[0].data = res.data.yAxis\n          myChart.setOption(barOptions)\n        }\n      })\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200') {\n            this.departmentInfo.name = res.data.name;\n            this.departmentInfo.headerName = res.data.headerName || '未指定';\n            \n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentInfo.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量失败，请检查网络连接\");\n      });\n    },\n    loadPendingTasks() {\n      this.loadPendingAskTasks();\n      this.loadPendingResourceTasks();\n    },\n    loadPendingAskTasks() {\n      this.$request.get('/askapply/countPending', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.askCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批请假数据失败:\", error);\n        this.$message.error(\"获取待审批请假数据失败，请检查网络连接\");\n      });\n    },\n    loadPendingResourceTasks() {\n      this.$request.get('/resourceapply/countPending', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.resourceCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批资产数据失败:\", error);\n        this.$message.error(\"获取待审批资产数据失败，请检查网络连接\");\n      });\n    },\n    loadDepartmentEmployees() {\n      this.$request.get('/employee/selectByDepartment', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentEmployees = res.data || [];\n        }\n      }).catch(error => {\n        console.error(\"获取部门员工列表失败:\", error);\n        this.$message.error(\"获取部门员工列表失败，请检查网络连接\");\n      });\n    },\n    loadPersonalTasks() {\n      this.$request.get('/employee/applicationStats', {\n        params: { employeeId: this.user.id }\n      }).then(res => {\n        if (res.code === '200') {\n          this.personalTasks = res.data || {\n            total: 0,\n            approved: 0,\n            pending: 0,\n            rejected: 0\n          };\n        }\n      }).catch(error => {\n        console.error(\"获取个人申请统计数据失败:\", error);\n        this.$message.error(\"获取个人申请统计数据失败，请检查网络连接\");\n      });\n    },\n    goToEmployeeList() {\n      this.$router.push('/user');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 15px;\n  margin: 5px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n.dashboard-item {\n  text-align: center;\n  padding: 10px 0;\n}\n.dashboard-num {\n  font-size: 28px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-bottom: 10px;\n}\n.dashboard-title {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n.dashboard-detail {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}