{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"Department\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      year: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        employeeId: [{\n          required: true,\n          message: '请选择员工',\n          trigger: 'blur'\n        }],\n        year: [{\n          required: true,\n          message: '请选择发放年月',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入发放薪资',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      employeeData: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadEmployee();\n  },\n  methods: {\n    loadEmployee() {\n      if (this.user.role === 'ADMIN') {\n        this.$request.get('/employee/selectAll').then(res => {\n          if (res.code === '200') {\n            this.employeeData = res.data;\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      } else if (this.isHeader) {\n        this.$request.get('/employee/selectByDepartment', {\n          params: {\n            departmentId: this.user.departmentId\n          }\n        }).then(res => {\n          if (res.code === '200') {\n            this.employeeData = res.data;\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      } else {\n        this.employeeData = [{\n          id: this.user.id,\n          name: this.user.name\n        }];\n      }\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/salary/update' : '/salary/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/salary/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/salary/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/salary/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          year: this.year\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.year = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","year","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","employeeId","required","message","trigger","price","ids","employeeData","created","load","loadEmployee","methods","role","$request","get","then","res","code","$message","error","msg","isHeader","params","departmentId","id","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange","computed","level","includes"],"sources":["src/views/manager/Salary.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输年月：例如 2023-02\" style=\"width: 200px\" v-model=\"year\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"employeeName\" label=\"员工姓名\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"departmentName\" label=\"所属部门\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"year\" label=\"年月\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"发放时间\"></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"发放薪资\"></el-table-column>\r\n        <el-table-column prop=\"note\" label=\"备注说明\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"employeeId\" label=\"选择员工\">\r\n          <el-select v-model=\"form.employeeId\" placeholder=\"请选择员工\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in employeeData\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"year\" label=\"发放年月\">\r\n          <el-date-picker style=\"width: 100%\"\r\n              v-model=\"form.year\"\r\n              type=\"month\"\r\n              value-format=\"yyyy-MM\"\r\n              placeholder=\"选择月\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"time\" label=\"发放时间\">\r\n          <el-date-picker style=\"width: 100%\"\r\n              v-model=\"form.time\"\r\n              type=\"datetime\"\r\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n              placeholder=\"选择日期时间\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"price\" label=\"发放薪资\">\r\n          <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"note\" label=\"备注说明\">\r\n          <el-input v-model=\"form.note\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Department\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      year: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        employeeId: [\r\n          {required: true, message: '请选择员工', trigger: 'blur'},\r\n        ],\r\n        year: [\r\n          {required: true, message: '请选择发放年月', trigger: 'blur'},\r\n        ],\r\n        price: [\r\n          {required: true, message: '请输入发放薪资', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: [],\r\n      employeeData: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadEmployee()\r\n  },\r\n  methods: {\r\n    loadEmployee() {\r\n      if (this.user.role === 'ADMIN') {\r\n        this.$request.get('/employee/selectAll').then(res => {\r\n          if (res.code === '200') {\r\n            this.employeeData = res.data\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      } else if (this.isHeader) {\r\n        this.$request.get('/employee/selectByDepartment', {\r\n          params: { departmentId: this.user.departmentId }\r\n        }).then(res => {\r\n          if (res.code === '200') {\r\n            this.employeeData = res.data\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      } else {\r\n        this.employeeData = [{\r\n          id: this.user.id,\r\n          name: this.user.name\r\n        }]\r\n      }\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/salary/update' : '/salary/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/salary/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/salary/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/salary/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          year: this.year,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.year = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  },\r\n  computed: {\r\n    isHeader() {\r\n      return this.user.level === 'HEADER' || \r\n             this.user.role === 'HEADER' || \r\n             (this.user.level && this.user.level.includes('主管'));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}