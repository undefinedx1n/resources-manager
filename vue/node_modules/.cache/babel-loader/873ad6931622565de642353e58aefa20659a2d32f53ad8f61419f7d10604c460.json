{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Welcome\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentHeader: '未指定',\n      departmentName: ''\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    this.loadDepartmentInfo();\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        // 获取部门信息\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200' && res.data) {\n            // 如果是主管，获取部门员工数量\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n\n            // 获取部门主管信息\n            if (res.data.employeeId) {\n              this.$request.get('/employee/selectById/' + res.data.employeeId).then(empRes => {\n                if (empRes.code === '200' && empRes.data) {\n                  this.departmentHeader = empRes.data.name || '未指定';\n                }\n              }).catch(error => {\n                console.error(\"获取部门主管信息失败:\", error);\n                this.$message.error(\"获取部门主管信息失败\");\n              });\n            }\n\n            // 获取部门名称\n            this.departmentName = res.data.name || '未命名部门';\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(countRes => {\n        if (countRes.code === '200') {\n          this.employeeCount = countRes.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量信息失败，请检查网络连接\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","currentTime","Date","toLocaleString","employeeCount","departmentHeader","departmentName","computed","isHeader","level","role","includes","created","updateTime","setInterval","loadDepartmentInfo","methods","goToPage","path","$router","push","departmentId","$request","get","then","res","code","loadEmployeeCount","employeeId","empRes","catch","error","console","$message","params","countRes"],"sources":["src/components/Welcome.vue"],"sourcesContent":["<template>\n  <div class=\"welcome-container\">\n    <div class=\"welcome-header\">\n      <h1>欢迎使用企业人力资源管理系统</h1>\n      <p class=\"welcome-time\">{{ currentTime }}</p>\n    </div>\n    \n    <!-- 主管欢迎信息 -->\n    <div v-if=\"isHeader\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-s-custom\"></i> 部门主管工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b> 主管，您好！</p>\n          <p>您现在管理的是 <b>{{ departmentName }}</b> 部门，共有员工 {{ employeeCount }} 人。</p>\n          <p>您的主要职责：</p>\n          <ul>\n            <li>审批本部门员工的请假申请</li>\n            <li>审批本部门员工的资产申请</li>\n            <li>管理和监督本部门的员工</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/askApply')\">部门请假审批</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/resourcesApply')\">部门资产审批</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/user')\">员工管理</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n    \n    <!-- 普通员工欢迎信息 -->\n    <div v-else-if=\"user.role === 'USER'\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-user\"></i> 员工工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b>，您好！</p>\n          <p>您属于 <b>{{ departmentName }}</b> 部门，您的部门主管是 <b>{{ departmentHeader }}</b>。</p>\n          <p>您可以进行的主要操作：</p>\n          <ul>\n            <li>查看个人薪资和考勤信息</li>\n            <li>提交请假申请</li>\n            <li>申请使用公司资产</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/askRecord')\">请假申请</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/resources')\">资产申请</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/salary')\">薪资信息</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n    \n    <!-- 管理员欢迎信息 -->\n    <div v-else-if=\"user.role === 'ADMIN'\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-s-tools\"></i> 系统管理员工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b> 管理员，您好！</p>\n          <p>您拥有系统的全部管理权限。</p>\n          <p>您的主要职责：</p>\n          <ul>\n            <li>管理公司部门和员工信息</li>\n            <li>最终审批员工的请假和资产申请</li>\n            <li>管理系统资源和权限</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/department')\">部门管理</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/user')\">员工管理</el-button>\n            <el-button type=\"warning\" @click=\"goToPage('/askApply')\">请假审批</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/resourcesApply')\">资产审批</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Welcome\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentHeader: '未指定',\n      departmentName: ''\n    }\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || \n             this.user.role === 'HEADER' || \n             (this.user.level && this.user.level.includes('主管'));\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    this.loadDepartmentInfo();\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        // 获取部门信息\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200' && res.data) {\n            // 如果是主管，获取部门员工数量\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n            \n            // 获取部门主管信息\n            if (res.data.employeeId) {\n              this.$request.get('/employee/selectById/' + res.data.employeeId).then(empRes => {\n                if (empRes.code === '200' && empRes.data) {\n                  this.departmentHeader = empRes.data.name || '未指定';\n                }\n              }).catch(error => {\n                console.error(\"获取部门主管信息失败:\", error);\n                this.$message.error(\"获取部门主管信息失败\");\n              });\n            }\n            \n            // 获取部门名称\n            this.departmentName = res.data.name || '未命名部门';\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    \n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: { departmentId: this.user.departmentId }\n      }).then(countRes => {\n        if (countRes.code === '200') {\n          this.employeeCount = countRes.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量信息失败，请检查网络连接\");\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.welcome-container {\n  padding: 20px;\n}\n.welcome-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n.welcome-time {\n  color: #666;\n  font-size: 16px;\n}\n.role-welcome {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.role-card {\n  border-radius: 6px;\n}\n.role-header {\n  font-weight: bold;\n  font-size: 18px;\n}\n.role-content {\n  padding: 10px 0;\n}\n.role-content ul {\n  margin: 15px 0;\n  padding-left: 20px;\n}\n.role-content li {\n  line-height: 24px;\n  margin-bottom: 8px;\n}\n.role-actions {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.role-actions .el-button {\n  margin: 5px 10px;\n}\n</style> "],"mappings":";AAmFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,WAAA,MAAAC,IAAA,GAAAC,cAAA;MACAC,aAAA;MACAC,gBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAZ,IAAA,CAAAa,KAAA,iBACA,KAAAb,IAAA,CAAAc,IAAA,iBACA,KAAAd,IAAA,CAAAa,KAAA,SAAAb,IAAA,CAAAa,KAAA,CAAAE,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACAC,WAAA,MAAAD,UAAA;IACA,KAAAE,kBAAA;EACA;EACAC,OAAA;IACAH,WAAA;MACA,KAAAZ,WAAA,OAAAC,IAAA,GAAAC,cAAA;IACA;IACAc,SAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,CAAAF,IAAA;IACA;IACAH,mBAAA;MACA,SAAAnB,IAAA,CAAAyB,YAAA;QACA;QACA,KAAAC,QAAA,CAAAC,GAAA,gCAAA3B,IAAA,CAAAyB,YAAA,EAAAG,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA,cAAAD,GAAA,CAAA9B,IAAA;YACA;YACA,SAAAa,QAAA;cACA,KAAAmB,iBAAA;YACA;;YAEA;YACA,IAAAF,GAAA,CAAA9B,IAAA,CAAAiC,UAAA;cACA,KAAAN,QAAA,CAAAC,GAAA,2BAAAE,GAAA,CAAA9B,IAAA,CAAAiC,UAAA,EAAAJ,IAAA,CAAAK,MAAA;gBACA,IAAAA,MAAA,CAAAH,IAAA,cAAAG,MAAA,CAAAlC,IAAA;kBACA,KAAAU,gBAAA,GAAAwB,MAAA,CAAAlC,IAAA,CAAAD,IAAA;gBACA;cACA,GAAAoC,KAAA,CAAAC,KAAA;gBACAC,OAAA,CAAAD,KAAA,gBAAAA,KAAA;gBACA,KAAAE,QAAA,CAAAF,KAAA;cACA;YACA;;YAEA;YACA,KAAAzB,cAAA,GAAAmB,GAAA,CAAA9B,IAAA,CAAAD,IAAA;UACA;QACA,GAAAoC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;UACA,KAAAE,QAAA,CAAAF,KAAA;QACA;MACA;IACA;IAEAJ,kBAAA;MACA,KAAAL,QAAA,CAAAC,GAAA;QACAW,MAAA;UAAAb,YAAA,OAAAzB,IAAA,CAAAyB;QAAA;MACA,GAAAG,IAAA,CAAAW,QAAA;QACA,IAAAA,QAAA,CAAAT,IAAA;UACA,KAAAtB,aAAA,GAAA+B,QAAA,CAAAxC,IAAA;QACA;MACA,GAAAmC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}