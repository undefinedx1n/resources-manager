{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Welcome\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentHeader: '未指定',\n      mockData: {\n        departments: {\n          1: {\n            name: '技术研发部',\n            headerName: '刘波涛'\n          },\n          2: {\n            name: '市场营销部',\n            headerName: '张静'\n          },\n          3: {\n            name: '人力资源部',\n            headerName: '王飞'\n          },\n          4: {\n            name: '财务部',\n            headerName: '刘颖'\n          },\n          5: {\n            name: '运营部',\n            headerName: '陈伟'\n          }\n        },\n        employeeCounts: {\n          1: 3,\n          2: 2,\n          3: 2,\n          4: 1,\n          5: 1\n        }\n      }\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    this.loadDepartmentInfo();\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        // 获取部门信息\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200') {\n            // 如果是主管，获取部门员工数量\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n\n            // 获取部门主管信息\n            if (this.user.role === 'USER' && !this.isHeader) {\n              this.departmentHeader = res.data.headerName || '未指定';\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          // 使用模拟数据作为降级方案\n          const deptId = this.user.departmentId;\n          if (this.mockData.departments[deptId]) {\n            console.log(\"Welcome组件使用模拟部门数据\");\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n            if (this.user.role === 'USER' && !this.isHeader) {\n              this.departmentHeader = this.mockData.departments[deptId].headerName;\n            }\n          } else {\n            this.$message.error(\"获取部门信息失败，请检查网络连接\");\n          }\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(countRes => {\n        if (countRes.code === '200') {\n          this.employeeCount = countRes.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        // 使用模拟数据作为降级方案\n        const deptId = this.user.departmentId;\n        if (this.mockData.employeeCounts[deptId] !== undefined) {\n          console.log(\"Welcome组件使用模拟员工数量数据\");\n          this.employeeCount = this.mockData.employeeCounts[deptId];\n        } else {\n          this.$message.error(\"获取员工数量信息失败，请检查网络连接\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","currentTime","Date","toLocaleString","employeeCount","departmentHeader","mockData","departments","headerName","employeeCounts","computed","isHeader","level","role","includes","created","updateTime","setInterval","loadDepartmentInfo","methods","goToPage","path","$router","push","departmentId","$request","get","then","res","code","loadEmployeeCount","catch","error","console","deptId","log","$message","params","countRes","undefined"],"sources":["src/components/Welcome.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome-container\">\r\n    <div class=\"welcome-header\">\r\n      <h1>欢迎使用企业人力资源管理系统</h1>\r\n      <p class=\"welcome-time\">{{ currentTime }}</p>\r\n    </div>\r\n    \r\n    <!-- 主管欢迎信息 -->\r\n    <div v-if=\"isHeader\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-s-custom\"></i> 部门主管工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b> 主管，您好！</p>\r\n          <p>您现在管理的是 <b>{{ user.departmentName }}</b> 部门，共有员工 {{ employeeCount }} 人。</p>\r\n          <p>您的主要职责：</p>\r\n          <ul>\r\n            <li>审批本部门员工的请假申请</li>\r\n            <li>审批本部门员工的资产申请</li>\r\n            <li>管理和监督本部门的员工</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/askApply')\">部门请假审批</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/resourcesApply')\">部门资产审批</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/user')\">员工管理</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 普通员工欢迎信息 -->\r\n    <div v-else-if=\"user.role === 'USER'\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-user\"></i> 员工工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b>，您好！</p>\r\n          <p>您属于 <b>{{ user.departmentName }}</b> 部门，您的部门主管是 <b>{{ departmentHeader }}</b>。</p>\r\n          <p>您可以进行的主要操作：</p>\r\n          <ul>\r\n            <li>查看个人薪资和考勤信息</li>\r\n            <li>提交请假申请</li>\r\n            <li>申请使用公司资产</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/askRecord')\">请假申请</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/resources')\">资产申请</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/salary')\">薪资信息</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 管理员欢迎信息 -->\r\n    <div v-else-if=\"user.role === 'ADMIN'\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-s-tools\"></i> 系统管理员工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b> 管理员，您好！</p>\r\n          <p>您拥有系统的全部管理权限。</p>\r\n          <p>您的主要职责：</p>\r\n          <ul>\r\n            <li>管理公司部门和员工信息</li>\r\n            <li>最终审批员工的请假和资产申请</li>\r\n            <li>管理系统资源和权限</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/department')\">部门管理</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/user')\">员工管理</el-button>\r\n            <el-button type=\"warning\" @click=\"goToPage('/askApply')\">请假审批</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/resourcesApply')\">资产审批</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Welcome\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      currentTime: new Date().toLocaleString(),\r\n      employeeCount: 0,\r\n      departmentHeader: '未指定',\r\n      mockData: {\r\n        departments: {\r\n          1: { name: '技术研发部', headerName: '刘波涛' },\r\n          2: { name: '市场营销部', headerName: '张静' },\r\n          3: { name: '人力资源部', headerName: '王飞' },\r\n          4: { name: '财务部', headerName: '刘颖' },\r\n          5: { name: '运营部', headerName: '陈伟' }\r\n        },\r\n        employeeCounts: {\r\n          1: 3, 2: 2, 3: 2, 4: 1, 5: 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    isHeader() {\r\n      return this.user.level === 'HEADER' || \r\n             this.user.role === 'HEADER' || \r\n             (this.user.level && this.user.level.includes('主管'));\r\n    }\r\n  },\r\n  created() {\r\n    this.updateTime();\r\n    setInterval(this.updateTime, 1000);\r\n    this.loadDepartmentInfo();\r\n  },\r\n  methods: {\r\n    updateTime() {\r\n      this.currentTime = new Date().toLocaleString();\r\n    },\r\n    goToPage(path) {\r\n      this.$router.push(path);\r\n    },\r\n    loadDepartmentInfo() {\r\n      if (this.user.departmentId) {\r\n        // 获取部门信息\r\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\r\n          if (res.code === '200') {\r\n            // 如果是主管，获取部门员工数量\r\n            if (this.isHeader) {\r\n              this.loadEmployeeCount();\r\n            }\r\n            \r\n            // 获取部门主管信息\r\n            if (this.user.role === 'USER' && !this.isHeader) {\r\n              this.departmentHeader = res.data.headerName || '未指定';\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          console.error(\"获取部门信息失败:\", error);\r\n          // 使用模拟数据作为降级方案\r\n          const deptId = this.user.departmentId;\r\n          if (this.mockData.departments[deptId]) {\r\n            console.log(\"Welcome组件使用模拟部门数据\");\r\n            \r\n            if (this.isHeader) {\r\n              this.loadEmployeeCount();\r\n            }\r\n            \r\n            if (this.user.role === 'USER' && !this.isHeader) {\r\n              this.departmentHeader = this.mockData.departments[deptId].headerName;\r\n            }\r\n          } else {\r\n            this.$message.error(\"获取部门信息失败，请检查网络连接\");\r\n          }\r\n        });\r\n      }\r\n    },\r\n    \r\n    loadEmployeeCount() {\r\n      this.$request.get('/employee/count', {\r\n        params: { departmentId: this.user.departmentId }\r\n      }).then(countRes => {\r\n        if (countRes.code === '200') {\r\n          this.employeeCount = countRes.data || 0;\r\n        }\r\n      }).catch(error => {\r\n        console.error(\"获取员工数量失败:\", error);\r\n        // 使用模拟数据作为降级方案\r\n        const deptId = this.user.departmentId;\r\n        if (this.mockData.employeeCounts[deptId] !== undefined) {\r\n          console.log(\"Welcome组件使用模拟员工数量数据\");\r\n          this.employeeCount = this.mockData.employeeCounts[deptId];\r\n        } else {\r\n          this.$message.error(\"获取员工数量信息失败，请检查网络连接\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.welcome-container {\r\n  padding: 20px;\r\n}\r\n.welcome-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n.welcome-time {\r\n  color: #666;\r\n  font-size: 16px;\r\n}\r\n.role-welcome {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n.role-card {\r\n  border-radius: 6px;\r\n}\r\n.role-header {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n.role-content {\r\n  padding: 10px 0;\r\n}\r\n.role-content ul {\r\n  margin: 15px 0;\r\n  padding-left: 20px;\r\n}\r\n.role-content li {\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n}\r\n.role-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n.role-actions .el-button {\r\n  margin: 5px 10px;\r\n}\r\n</style> "],"mappings":";AAmFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,WAAA,MAAAC,IAAA,GAAAC,cAAA;MACAC,aAAA;MACAC,gBAAA;MACAC,QAAA;QACAC,WAAA;UACA;YAAAb,IAAA;YAAAc,UAAA;UAAA;UACA;YAAAd,IAAA;YAAAc,UAAA;UAAA;UACA;YAAAd,IAAA;YAAAc,UAAA;UAAA;UACA;YAAAd,IAAA;YAAAc,UAAA;UAAA;UACA;YAAAd,IAAA;YAAAc,UAAA;UAAA;QACA;QACAC,cAAA;UACA;UAAA;UAAA;UAAA;UAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAf,IAAA,CAAAgB,KAAA,iBACA,KAAAhB,IAAA,CAAAiB,IAAA,iBACA,KAAAjB,IAAA,CAAAgB,KAAA,SAAAhB,IAAA,CAAAgB,KAAA,CAAAE,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACAC,WAAA,MAAAD,UAAA;IACA,KAAAE,kBAAA;EACA;EACAC,OAAA;IACAH,WAAA;MACA,KAAAf,WAAA,OAAAC,IAAA,GAAAC,cAAA;IACA;IACAiB,SAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,CAAAF,IAAA;IACA;IACAH,mBAAA;MACA,SAAAtB,IAAA,CAAA4B,YAAA;QACA;QACA,KAAAC,QAAA,CAAAC,GAAA,gCAAA9B,IAAA,CAAA4B,YAAA,EAAAG,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA;YACA,SAAAlB,QAAA;cACA,KAAAmB,iBAAA;YACA;;YAEA;YACA,SAAAlC,IAAA,CAAAiB,IAAA,qBAAAF,QAAA;cACA,KAAAN,gBAAA,GAAAuB,GAAA,CAAAjC,IAAA,CAAAa,UAAA;YACA;UACA;QACA,GAAAuB,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;UACA;UACA,MAAAE,MAAA,QAAAtC,IAAA,CAAA4B,YAAA;UACA,SAAAlB,QAAA,CAAAC,WAAA,CAAA2B,MAAA;YACAD,OAAA,CAAAE,GAAA;YAEA,SAAAxB,QAAA;cACA,KAAAmB,iBAAA;YACA;YAEA,SAAAlC,IAAA,CAAAiB,IAAA,qBAAAF,QAAA;cACA,KAAAN,gBAAA,QAAAC,QAAA,CAAAC,WAAA,CAAA2B,MAAA,EAAA1B,UAAA;YACA;UACA;YACA,KAAA4B,QAAA,CAAAJ,KAAA;UACA;QACA;MACA;IACA;IAEAF,kBAAA;MACA,KAAAL,QAAA,CAAAC,GAAA;QACAW,MAAA;UAAAb,YAAA,OAAA5B,IAAA,CAAA4B;QAAA;MACA,GAAAG,IAAA,CAAAW,QAAA;QACA,IAAAA,QAAA,CAAAT,IAAA;UACA,KAAAzB,aAAA,GAAAkC,QAAA,CAAA3C,IAAA;QACA;MACA,GAAAoC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA;QACA,MAAAE,MAAA,QAAAtC,IAAA,CAAA4B,YAAA;QACA,SAAAlB,QAAA,CAAAG,cAAA,CAAAyB,MAAA,MAAAK,SAAA;UACAN,OAAA,CAAAE,GAAA;UACA,KAAA/B,aAAA,QAAAE,QAAA,CAAAG,cAAA,CAAAyB,MAAA;QACA;UACA,KAAAE,QAAA,CAAAJ,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}