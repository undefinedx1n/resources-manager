{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Welcome\",\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentHeader: '未指定'\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    this.loadDepartmentInfo();\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        // 模拟部门数据\n        const mockDepartmentData = {\n          code: '200',\n          data: {\n            name: this.user.departmentName || '研发部',\n            headerName: '张主管'\n          }\n        };\n        try {\n          // 获取部门信息\n          this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n            if (res.code === '200') {\n              // 如果是主管，获取部门员工数量\n              if (this.isHeader) {\n                this.loadEmployeeCount();\n              }\n\n              // 获取部门主管信息\n              if (this.user.role === 'USER' && !this.isHeader) {\n                this.departmentHeader = res.data.headerName || '未指定';\n              }\n            }\n          }).catch(() => {\n            // 使用模拟数据\n            console.log(\"Welcome组件使用模拟部门数据\");\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n            if (this.user.role === 'USER' && !this.isHeader) {\n              this.departmentHeader = mockDepartmentData.data.headerName;\n            }\n          });\n        } catch (error) {\n          console.log(\"Welcome组件使用模拟部门数据\");\n          if (this.isHeader) {\n            this.loadEmployeeCount();\n          }\n          if (this.user.role === 'USER' && !this.isHeader) {\n            this.departmentHeader = mockDepartmentData.data.headerName;\n          }\n        }\n      }\n    },\n    loadEmployeeCount() {\n      // 模拟员工数量数据\n      const mockCountData = {\n        code: '200',\n        data: 8\n      };\n      try {\n        this.$request.get('/employee/count', {\n          params: {\n            departmentId: this.user.departmentId\n          }\n        }).then(countRes => {\n          if (countRes.code === '200') {\n            this.employeeCount = countRes.data || 0;\n          }\n        }).catch(() => {\n          // 使用模拟数据\n          console.log(\"Welcome组件使用模拟员工数量数据\");\n          this.employeeCount = mockCountData.data;\n        });\n      } catch (error) {\n        console.log(\"Welcome组件使用模拟员工数量数据\");\n        this.employeeCount = mockCountData.data;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","currentTime","Date","toLocaleString","employeeCount","departmentHeader","computed","isHeader","level","role","includes","created","updateTime","setInterval","loadDepartmentInfo","methods","goToPage","path","$router","push","departmentId","mockDepartmentData","code","departmentName","headerName","$request","get","then","res","loadEmployeeCount","catch","console","log","error","mockCountData","params","countRes"],"sources":["src/components/Welcome.vue"],"sourcesContent":["<template>\r\n  <div class=\"welcome-container\">\r\n    <div class=\"welcome-header\">\r\n      <h1>欢迎使用企业人力资源管理系统</h1>\r\n      <p class=\"welcome-time\">{{ currentTime }}</p>\r\n    </div>\r\n    \r\n    <!-- 主管欢迎信息 -->\r\n    <div v-if=\"isHeader\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-s-custom\"></i> 部门主管工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b> 主管，您好！</p>\r\n          <p>您现在管理的是 <b>{{ user.departmentName }}</b> 部门，共有员工 {{ employeeCount }} 人。</p>\r\n          <p>您的主要职责：</p>\r\n          <ul>\r\n            <li>审批本部门员工的请假申请</li>\r\n            <li>审批本部门员工的资产申请</li>\r\n            <li>管理和监督本部门的员工</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/askApply')\">部门请假审批</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/resourcesApply')\">部门资产审批</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/user')\">员工管理</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 普通员工欢迎信息 -->\r\n    <div v-else-if=\"user.role === 'USER'\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-user\"></i> 员工工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b>，您好！</p>\r\n          <p>您属于 <b>{{ user.departmentName }}</b> 部门，您的部门主管是 <b>{{ departmentHeader }}</b>。</p>\r\n          <p>您可以进行的主要操作：</p>\r\n          <ul>\r\n            <li>查看个人薪资和考勤信息</li>\r\n            <li>提交请假申请</li>\r\n            <li>申请使用公司资产</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/askRecord')\">请假申请</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/resources')\">资产申请</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/salary')\">薪资信息</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 管理员欢迎信息 -->\r\n    <div v-else-if=\"user.role === 'ADMIN'\" class=\"role-welcome\">\r\n      <el-card shadow=\"hover\" class=\"role-card\">\r\n        <div slot=\"header\" class=\"role-header\">\r\n          <i class=\"el-icon-s-tools\"></i> 系统管理员工作台\r\n        </div>\r\n        <div class=\"role-content\">\r\n          <p>尊敬的 <b>{{ user.name }}</b> 管理员，您好！</p>\r\n          <p>您拥有系统的全部管理权限。</p>\r\n          <p>您的主要职责：</p>\r\n          <ul>\r\n            <li>管理公司部门和员工信息</li>\r\n            <li>最终审批员工的请假和资产申请</li>\r\n            <li>管理系统资源和权限</li>\r\n          </ul>\r\n          <div class=\"role-actions\">\r\n            <el-button type=\"primary\" @click=\"goToPage('/department')\">部门管理</el-button>\r\n            <el-button type=\"success\" @click=\"goToPage('/user')\">员工管理</el-button>\r\n            <el-button type=\"warning\" @click=\"goToPage('/askApply')\">请假审批</el-button>\r\n            <el-button type=\"info\" @click=\"goToPage('/resourcesApply')\">资产审批</el-button>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Welcome\",\r\n  data() {\r\n    return {\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      currentTime: new Date().toLocaleString(),\r\n      employeeCount: 0,\r\n      departmentHeader: '未指定'\r\n    }\r\n  },\r\n  computed: {\r\n    isHeader() {\r\n      return this.user.level === 'HEADER' || \r\n             this.user.role === 'HEADER' || \r\n             (this.user.level && this.user.level.includes('主管'));\r\n    }\r\n  },\r\n  created() {\r\n    this.updateTime();\r\n    setInterval(this.updateTime, 1000);\r\n    this.loadDepartmentInfo();\r\n  },\r\n  methods: {\r\n    updateTime() {\r\n      this.currentTime = new Date().toLocaleString();\r\n    },\r\n    goToPage(path) {\r\n      this.$router.push(path);\r\n    },\r\n    loadDepartmentInfo() {\r\n      if (this.user.departmentId) {\r\n        // 模拟部门数据\r\n        const mockDepartmentData = {\r\n          code: '200',\r\n          data: {\r\n            name: this.user.departmentName || '研发部',\r\n            headerName: '张主管'\r\n          }\r\n        };\r\n        \r\n        try {\r\n          // 获取部门信息\r\n          this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\r\n            if (res.code === '200') {\r\n              // 如果是主管，获取部门员工数量\r\n              if (this.isHeader) {\r\n                this.loadEmployeeCount();\r\n              }\r\n              \r\n              // 获取部门主管信息\r\n              if (this.user.role === 'USER' && !this.isHeader) {\r\n                this.departmentHeader = res.data.headerName || '未指定';\r\n              }\r\n            }\r\n          }).catch(() => {\r\n            // 使用模拟数据\r\n            console.log(\"Welcome组件使用模拟部门数据\");\r\n            if (this.isHeader) {\r\n              this.loadEmployeeCount();\r\n            }\r\n            \r\n            if (this.user.role === 'USER' && !this.isHeader) {\r\n              this.departmentHeader = mockDepartmentData.data.headerName;\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.log(\"Welcome组件使用模拟部门数据\");\r\n          if (this.isHeader) {\r\n            this.loadEmployeeCount();\r\n          }\r\n          \r\n          if (this.user.role === 'USER' && !this.isHeader) {\r\n            this.departmentHeader = mockDepartmentData.data.headerName;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \r\n    loadEmployeeCount() {\r\n      // 模拟员工数量数据\r\n      const mockCountData = {\r\n        code: '200',\r\n        data: 8\r\n      };\r\n      \r\n      try {\r\n        this.$request.get('/employee/count', {\r\n          params: { departmentId: this.user.departmentId }\r\n        }).then(countRes => {\r\n          if (countRes.code === '200') {\r\n            this.employeeCount = countRes.data || 0;\r\n          }\r\n        }).catch(() => {\r\n          // 使用模拟数据\r\n          console.log(\"Welcome组件使用模拟员工数量数据\");\r\n          this.employeeCount = mockCountData.data;\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Welcome组件使用模拟员工数量数据\");\r\n        this.employeeCount = mockCountData.data;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.welcome-container {\r\n  padding: 20px;\r\n}\r\n.welcome-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n.welcome-time {\r\n  color: #666;\r\n  font-size: 16px;\r\n}\r\n.role-welcome {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n.role-card {\r\n  border-radius: 6px;\r\n}\r\n.role-header {\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n}\r\n.role-content {\r\n  padding: 10px 0;\r\n}\r\n.role-content ul {\r\n  margin: 15px 0;\r\n  padding-left: 20px;\r\n}\r\n.role-content li {\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n}\r\n.role-actions {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n.role-actions .el-button {\r\n  margin: 5px 10px;\r\n}\r\n</style> "],"mappings":";AAmFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,WAAA,MAAAC,IAAA,GAAAC,cAAA;MACAC,aAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAX,IAAA,CAAAY,KAAA,iBACA,KAAAZ,IAAA,CAAAa,IAAA,iBACA,KAAAb,IAAA,CAAAY,KAAA,SAAAZ,IAAA,CAAAY,KAAA,CAAAE,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;IACAC,WAAA,MAAAD,UAAA;IACA,KAAAE,kBAAA;EACA;EACAC,OAAA;IACAH,WAAA;MACA,KAAAX,WAAA,OAAAC,IAAA,GAAAC,cAAA;IACA;IACAa,SAAAC,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,CAAAF,IAAA;IACA;IACAH,mBAAA;MACA,SAAAlB,IAAA,CAAAwB,YAAA;QACA;QACA,MAAAC,kBAAA;UACAC,IAAA;UACA3B,IAAA;YACAD,IAAA,OAAAE,IAAA,CAAA2B,cAAA;YACAC,UAAA;UACA;QACA;QAEA;UACA;UACA,KAAAC,QAAA,CAAAC,GAAA,gCAAA9B,IAAA,CAAAwB,YAAA,EAAAO,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAN,IAAA;cACA;cACA,SAAAf,QAAA;gBACA,KAAAsB,iBAAA;cACA;;cAEA;cACA,SAAAjC,IAAA,CAAAa,IAAA,qBAAAF,QAAA;gBACA,KAAAF,gBAAA,GAAAuB,GAAA,CAAAjC,IAAA,CAAA6B,UAAA;cACA;YACA;UACA,GAAAM,KAAA;YACA;YACAC,OAAA,CAAAC,GAAA;YACA,SAAAzB,QAAA;cACA,KAAAsB,iBAAA;YACA;YAEA,SAAAjC,IAAA,CAAAa,IAAA,qBAAAF,QAAA;cACA,KAAAF,gBAAA,GAAAgB,kBAAA,CAAA1B,IAAA,CAAA6B,UAAA;YACA;UACA;QACA,SAAAS,KAAA;UACAF,OAAA,CAAAC,GAAA;UACA,SAAAzB,QAAA;YACA,KAAAsB,iBAAA;UACA;UAEA,SAAAjC,IAAA,CAAAa,IAAA,qBAAAF,QAAA;YACA,KAAAF,gBAAA,GAAAgB,kBAAA,CAAA1B,IAAA,CAAA6B,UAAA;UACA;QACA;MACA;IACA;IAEAK,kBAAA;MACA;MACA,MAAAK,aAAA;QACAZ,IAAA;QACA3B,IAAA;MACA;MAEA;QACA,KAAA8B,QAAA,CAAAC,GAAA;UACAS,MAAA;YAAAf,YAAA,OAAAxB,IAAA,CAAAwB;UAAA;QACA,GAAAO,IAAA,CAAAS,QAAA;UACA,IAAAA,QAAA,CAAAd,IAAA;YACA,KAAAlB,aAAA,GAAAgC,QAAA,CAAAzC,IAAA;UACA;QACA,GAAAmC,KAAA;UACA;UACAC,OAAA,CAAAC,GAAA;UACA,KAAA5B,aAAA,GAAA8B,aAAA,CAAAvC,IAAA;QACA;MACA,SAAAsC,KAAA;QACAF,OAAA,CAAAC,GAAA;QACA,KAAA5B,aAAA,GAAA8B,aAAA,CAAAvC,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}