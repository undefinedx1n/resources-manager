{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n        role: 'USER'\n      },\n      dialogVisible: true,\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      this.$refs['loginForm'].validate(valid => {\n        if (valid) {\n          // 模拟用户数据\n          const mockUserData = {\n            USER: {\n              code: '200',\n              data: {\n                id: 1,\n                username: this.form.username || 'employee',\n                name: '测试员工',\n                departmentId: 1,\n                departmentName: '研发部',\n                role: 'USER',\n                headerFlag: 0 // 普通员工\n              },\n              msg: '登录成功'\n            },\n            ADMIN: {\n              code: '200',\n              data: {\n                id: 100,\n                username: this.form.username || 'admin',\n                name: '系统管理员',\n                departmentId: null,\n                departmentName: null,\n                role: 'ADMIN',\n                headerFlag: 0\n              },\n              msg: '登录成功'\n            },\n            USER_HEADER: {\n              code: '200',\n              data: {\n                id: 10,\n                username: this.form.username || 'manager',\n                name: '部门主管',\n                departmentId: 1,\n                departmentName: '研发部',\n                role: 'USER',\n                headerFlag: 1 // 部门主管\n              },\n              msg: '登录成功'\n            }\n          };\n\n          // 判断是否是部门主管登录\n          const isManager = this.form.username.toLowerCase().includes('manager') || this.form.username.toLowerCase().includes('主管') || this.form.username.toLowerCase().includes('header');\n          try {\n            // 验证通过\n            this.$request.post('/login', this.form).then(res => {\n              if (res.code === '200') {\n                localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n                this.$router.push('/'); // 跳转主页\n                this.$message.success('登录成功');\n              } else {\n                this.$message.error(res.msg);\n              }\n            }).catch(() => {\n              console.log(\"使用模拟登录数据\");\n\n              // 根据登录角色和用户名判断使用哪种模拟数据\n              let mockResponse;\n              if (this.form.role === 'ADMIN') {\n                mockResponse = mockUserData.ADMIN;\n              } else if (isManager) {\n                mockResponse = mockUserData.USER_HEADER;\n              } else {\n                mockResponse = mockUserData.USER;\n              }\n              localStorage.setItem(\"xm-user\", JSON.stringify(mockResponse.data));\n              this.$router.push('/');\n              this.$message.success('登录成功（模拟数据）');\n            });\n          } catch (error) {\n            console.log(\"使用模拟登录数据\", error);\n\n            // 根据登录角色和用户名判断使用哪种模拟数据\n            let mockResponse;\n            if (this.form.role === 'ADMIN') {\n              mockResponse = mockUserData.ADMIN;\n            } else if (isManager) {\n              mockResponse = mockUserData.USER_HEADER;\n            } else {\n              mockResponse = mockUserData.USER;\n            }\n            localStorage.setItem(\"xm-user\", JSON.stringify(mockResponse.data));\n            this.$router.push('/');\n            this.$message.success('登录成功（模拟数据）');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","username","password","role","dialogVisible","rules","required","message","trigger","created","methods","login","$refs","validate","valid","mockUserData","USER","code","id","departmentId","departmentName","headerFlag","msg","ADMIN","USER_HEADER","isManager","toLowerCase","includes","$request","post","then","res","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","catch","console","log","mockResponse"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎登录企业人力资源管理系统</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"loginForm\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input placeholder=\"请输入账号\" v-model=\"form.username\">\r\n            <template slot=\"prefix\">\r\n              <el-icon class=\"el-input__icon\"><user /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input placeholder=\"请输入密码\" v-model=\"form.password\" show-password>\r\n            <template slot=\"prefix\">\r\n              <el-icon class=\"el-input__icon\"><lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"role\">\r\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n            <el-option label=\"普通用户\" value=\"USER\"></el-option>\r\n            <el-option label=\"管理员\" value=\"ADMIN\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" style=\"width: 100%\" @click=\"login\">登录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            还没有账号？请 <a href=\"/register\">注册</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n    <el-dialog title=\"郑重声明\" :visible.sync=\"dialogVisible\" :show-close=\"false\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <div style=\"color: red; font-size: 16px; line-height: 26px; margin-bottom: 20px\">\r\n        本项目由知识星球【项目训练营】原创，我们已经对本项目<strong style=\"color: #4d1cc0\">申请了软件著作权，完善了所有星球项目相关的法律文件材料</strong>，星球内付费用户可以学习该项目自己使用，禁止在其他平台做转手或者倒卖，\r\n        我们有专门人员在各大平台不定期检索，一旦发现，<strong style=\"color: #4d1cc0\">我们第一时间收集好证据，向你发送律师函</strong>，现在互联网所有账号都是实名制，\r\n        我们可以明确追溯到你。请大家不要做违法的事情，不要给你的人生轨迹抹上一层黑。\r\n      </div>\r\n      <div style=\"text-align: center\">\r\n        <div>微信扫码加入知识星球【项目训练营】</div>\r\n        <img src=\"https://i.postimg.cc/0yTm5ps0/image.jpg\" alt=\"\">\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"dialogVisible=false\">我已明确本项目仅限个人使用</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        role: 'USER'\r\n      },\r\n      dialogVisible: true,\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        role: [\r\n          { required: true, message: '请选择角色', trigger: 'change' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['loginForm'].validate((valid) => {\r\n        if (valid) {\r\n          // 模拟用户数据\r\n          const mockUserData = {\r\n            USER: {\r\n              code: '200',\r\n              data: {\r\n                id: 1,\r\n                username: this.form.username || 'employee',\r\n                name: '测试员工',\r\n                departmentId: 1,\r\n                departmentName: '研发部',\r\n                role: 'USER',\r\n                headerFlag: 0 // 普通员工\r\n              },\r\n              msg: '登录成功'\r\n            },\r\n            ADMIN: {\r\n              code: '200',\r\n              data: {\r\n                id: 100,\r\n                username: this.form.username || 'admin',\r\n                name: '系统管理员',\r\n                departmentId: null,\r\n                departmentName: null,\r\n                role: 'ADMIN',\r\n                headerFlag: 0\r\n              },\r\n              msg: '登录成功'\r\n            },\r\n            USER_HEADER: {\r\n              code: '200',\r\n              data: {\r\n                id: 10,\r\n                username: this.form.username || 'manager',\r\n                name: '部门主管',\r\n                departmentId: 1,\r\n                departmentName: '研发部',\r\n                role: 'USER',\r\n                headerFlag: 1 // 部门主管\r\n              },\r\n              msg: '登录成功'\r\n            }\r\n          };\r\n\r\n          // 判断是否是部门主管登录\r\n          const isManager = this.form.username.toLowerCase().includes('manager') || \r\n                          this.form.username.toLowerCase().includes('主管') || \r\n                          this.form.username.toLowerCase().includes('header');\r\n          \r\n          try {\r\n            // 验证通过\r\n            this.$request.post('/login', this.form).then(res => {\r\n              if (res.code === '200') {\r\n                localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n                this.$router.push('/')  // 跳转主页\r\n                this.$message.success('登录成功')\r\n              } else {\r\n                this.$message.error(res.msg)\r\n              }\r\n            }).catch(() => {\r\n              console.log(\"使用模拟登录数据\");\r\n              \r\n              // 根据登录角色和用户名判断使用哪种模拟数据\r\n              let mockResponse;\r\n              if (this.form.role === 'ADMIN') {\r\n                mockResponse = mockUserData.ADMIN;\r\n              } else if (isManager) {\r\n                mockResponse = mockUserData.USER_HEADER;\r\n              } else {\r\n                mockResponse = mockUserData.USER;\r\n              }\r\n              \r\n              localStorage.setItem(\"xm-user\", JSON.stringify(mockResponse.data));\r\n              this.$router.push('/');\r\n              this.$message.success('登录成功（模拟数据）');\r\n            });\r\n          } catch (error) {\r\n            console.log(\"使用模拟登录数据\", error);\r\n            \r\n            // 根据登录角色和用户名判断使用哪种模拟数据\r\n            let mockResponse;\r\n            if (this.form.role === 'ADMIN') {\r\n              mockResponse = mockUserData.ADMIN;\r\n            } else if (isManager) {\r\n              mockResponse = mockUserData.USER_HEADER;\r\n            } else {\r\n              mockResponse = mockUserData.USER;\r\n            }\r\n            \r\n            localStorage.setItem(\"xm-user\", JSON.stringify(mockResponse.data));\r\n            this.$router.push('/');\r\n            this.$message.success('登录成功（模拟数据）');\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}