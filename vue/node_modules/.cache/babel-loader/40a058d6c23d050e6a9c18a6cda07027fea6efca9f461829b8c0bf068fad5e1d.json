{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n        role: 'USER'\n      },\n      dialogVisible: true,\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    login() {\n      this.$refs['loginForm'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$router.push('/'); // 跳转主页\n              this.$message.success('登录成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          }).catch(error => {\n            console.error(\"登录请求失败，使用应急登录机制:\", error);\n            this.$message.warning(\"连接服务器失败，使用应急登录\");\n\n            // 应急登录机制 - 只在API请求失败时使用\n            let userData = {};\n            if (this.form.role === 'ADMIN') {\n              userData = {\n                id: 1,\n                username: this.form.username || 'admin',\n                name: '管理员',\n                role: 'ADMIN'\n              };\n            } else {\n              // 检查是否为部门主管\n              const isManager = this.form.username.toLowerCase().includes('manager') || this.form.username.toLowerCase().includes('主管');\n              if (isManager) {\n                userData = {\n                  id: 4,\n                  username: this.form.username,\n                  name: '李波涛',\n                  departmentId: 1,\n                  departmentName: '技术部',\n                  role: 'USER',\n                  level: '主管'\n                };\n              } else {\n                userData = {\n                  id: 1,\n                  username: this.form.username,\n                  name: '张三',\n                  departmentId: 1,\n                  departmentName: '技术部',\n                  role: 'USER',\n                  level: '员工'\n                };\n              }\n            }\n            localStorage.setItem(\"xm-user\", JSON.stringify(userData));\n            this.$router.push('/');\n            this.$message.success('应急登录成功');\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","username","password","role","dialogVisible","rules","required","message","trigger","created","methods","login","$refs","validate","valid","$request","post","then","res","code","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","catch","console","warning","userData","id","isManager","toLowerCase","includes","departmentId","departmentName","level"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"login-box\">\r\n      <div class=\"login-title\">欢迎登录企业微人事管理系统</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"loginForm\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input placeholder=\"请输入账号\" v-model=\"form.username\">\r\n            <template slot=\"prefix\">\r\n              <el-icon class=\"el-input__icon\"><user /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input placeholder=\"请输入密码\" v-model=\"form.password\" show-password>\r\n            <template slot=\"prefix\">\r\n              <el-icon class=\"el-input__icon\"><lock /></el-icon>\r\n            </template>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"role\">\r\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\" style=\"width: 100%\">\r\n            <el-option label=\"普通用户\" value=\"USER\"></el-option>\r\n            <el-option label=\"管理员\" value=\"ADMIN\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" class=\"login-button\" @click=\"login\">登录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            还没有账号？请 <a href=\"/register\">注册</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        role: 'USER'\r\n      },\r\n      dialogVisible: true,\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        role: [\r\n          { required: true, message: '请选择角色', trigger: 'change' },\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['loginForm'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$router.push('/')  // 跳转主页\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          }).catch(error => {\r\n            console.error(\"登录请求失败，使用应急登录机制:\", error);\r\n            this.$message.warning(\"连接服务器失败，使用应急登录\");\r\n            \r\n            // 应急登录机制 - 只在API请求失败时使用\r\n            let userData = {};\r\n            if (this.form.role === 'ADMIN') {\r\n              userData = {\r\n                id: 1,\r\n                username: this.form.username || 'admin',\r\n                name: '管理员',\r\n                role: 'ADMIN'\r\n              };\r\n            } else {\r\n              // 检查是否为部门主管\r\n              const isManager = this.form.username.toLowerCase().includes('manager') || \r\n                            this.form.username.toLowerCase().includes('主管');\r\n              \r\n              if (isManager) {\r\n                userData = {\r\n                  id: 4,\r\n                  username: this.form.username,\r\n                  name: '李波涛',\r\n                  departmentId: 1,\r\n                  departmentName: '技术部',\r\n                  role: 'USER',\r\n                  level: '主管'\r\n                };\r\n              } else {\r\n                userData = {\r\n                  id: 1,\r\n                  username: this.form.username,\r\n                  name: '张三',\r\n                  departmentId: 1,\r\n                  departmentName: '技术部',\r\n                  role: 'USER',\r\n                  level: '员工'\r\n                };\r\n              }\r\n            }\r\n            \r\n            localStorage.setItem(\"xm-user\", JSON.stringify(userData));\r\n            this.$router.push('/');\r\n            this.$message.success('应急登录成功');\r\n          });\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  /* background-image: url(\"@/assets/imgs/bg.jpg\"); */\r\n  /* background-size: 100%; */\r\n  background: linear-gradient(135deg, #E4F3FF 10%, #A0D9EF 100%); /* 清新蓝渐变背景 */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 40px 30px; /* 增加上下边距 */\r\n  background-color: rgba(255, 255, 255, 0.9); /* 半透明白色背景 */\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  font-size: 22px; /* 稍大字体 */\r\n  margin-bottom: 30px; /* 增加间距 */\r\n  color: #303133; /* 深灰色标题 */\r\n  font-weight: bold;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  background-color: #5CB8E6 !important; /* 主色调 */\r\n  border-color: #5CB8E6 !important;\r\n  color: white;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #4AA8D8 !important; /* 悬停时稍深 */\r\n  border-color: #4AA8D8 !important;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 22px; /* 统一表单项间距 */\r\n}\r\n\r\na {\r\n  color: #5CB8E6; /* 主色调 */\r\n  text-decoration: none;\r\n  transition: color 0.3s ease;\r\n}\r\n\r\na:hover {\r\n  color: #4AA8D8; /* 悬停时稍深 */\r\n}\r\n</style>"],"mappings":";AAyCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,aAAA;MACAC,KAAA;QACAJ,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,cAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAAhB,IAAA,EAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACAC,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAL,GAAA,CAAAnB,IAAA;cACA,KAAAyB,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAV,GAAA,CAAAW,GAAA;YACA;UACA,GAAAC,KAAA,CAAAF,KAAA;YACAG,OAAA,CAAAH,KAAA,qBAAAA,KAAA;YACA,KAAAF,QAAA,CAAAM,OAAA;;YAEA;YACA,IAAAC,QAAA;YACA,SAAAjC,IAAA,CAAAG,IAAA;cACA8B,QAAA;gBACAC,EAAA;gBACAjC,QAAA,OAAAD,IAAA,CAAAC,QAAA;gBACAH,IAAA;gBACAK,IAAA;cACA;YACA;cACA;cACA,MAAAgC,SAAA,QAAAnC,IAAA,CAAAC,QAAA,CAAAmC,WAAA,GAAAC,QAAA,eACA,KAAArC,IAAA,CAAAC,QAAA,CAAAmC,WAAA,GAAAC,QAAA;cAEA,IAAAF,SAAA;gBACAF,QAAA;kBACAC,EAAA;kBACAjC,QAAA,OAAAD,IAAA,CAAAC,QAAA;kBACAH,IAAA;kBACAwC,YAAA;kBACAC,cAAA;kBACApC,IAAA;kBACAqC,KAAA;gBACA;cACA;gBACAP,QAAA;kBACAC,EAAA;kBACAjC,QAAA,OAAAD,IAAA,CAAAC,QAAA;kBACAH,IAAA;kBACAwC,YAAA;kBACAC,cAAA;kBACApC,IAAA;kBACAqC,KAAA;gBACA;cACA;YACA;YAEApB,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAU,QAAA;YACA,KAAAT,OAAA,CAAAC,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}