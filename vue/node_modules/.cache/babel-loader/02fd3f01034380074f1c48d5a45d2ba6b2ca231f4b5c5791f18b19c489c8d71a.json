{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport WelcomeComponent from \"@/components/Welcome.vue\";\nlet pieOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left',\n    textStyle: {\n      color: '#606266'\n    }\n  },\n  color: ['#5CB8E6', '#82C97B', '#F2C379', '#F56C6C', '#A0D9EF', '#91cc75', '#fac858', '#ee6666', '#73c0de'],\n  // 清新蓝主题色系\n  series: [{\n    name: '',\n    // 鼠标移上去显示内容\n    type: 'pie',\n    radius: '50%',\n    center: ['50%', '60%'],\n    data: [],\n    // Initialize with empty data\n    emphasis: {\n      itemStyle: {\n        shadowBlur: 10,\n        shadowOffsetX: 0,\n        shadowColor: 'rgba(0, 0, 0, 0.5)'\n      }\n    }\n  }]\n};\nlet lineOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [],\n    // Initialize with empty data\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#EBEEF5'\n      }\n    }\n  },\n  tooltip: {\n    trigger: 'axis' // Use axis trigger for line chart\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [{\n    data: [],\n    // Initialize with empty data\n    type: 'line',\n    smooth: true,\n    itemStyle: {\n      color: '#5CB8E6'\n    },\n    // 主色调\n    lineStyle: {\n      color: '#5CB8E6'\n    },\n    areaStyle: {\n      // Optional: add gradient area style\n      color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n        offset: 0,\n        color: 'rgba(92, 184, 230, 0.5)' // Lighter blue gradient start\n      }, {\n        offset: 1,\n        color: 'rgba(92, 184, 230, 0.1)' // Lighter blue gradient end\n      }])\n    }\n  }]\n};\nlet barOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [],\n    // Initialize with empty data\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#EBEEF5'\n      }\n    }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      // Optional: customize tooltip pointer\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [{\n    data: [],\n    // Initialize with empty data\n    type: 'bar',\n    barWidth: '60%',\n    // Adjust bar width\n    itemStyle: {\n      color: '#5CB8E6',\n      // 主色调\n      borderRadius: [4, 4, 0, 0] // Optional: add border radius to top\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#4AA8D8' // 悬停时稍深\n      }\n    }\n  }]\n};\nlet barSalaryOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [],\n    // Initialize with empty data\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: {\n      lineStyle: {\n        color: '#A8ABB2'\n      }\n    },\n    axisLabel: {\n      color: '#606266'\n    },\n    splitLine: {\n      lineStyle: {\n        color: '#EBEEF5'\n      }\n    }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [{\n    name: '部门薪资',\n    data: [],\n    // Initialize with empty data\n    type: 'bar',\n    barWidth: '40%',\n    itemStyle: {\n      color: '#82C97B' // 辅助色-绿色\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#67c23a'\n      }\n    }\n  }]\n};\nexport default {\n  name: 'Home',\n  components: {\n    WelcomeComponent\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      month: null,\n      monthData: [],\n      departmentInfo: {\n        name: '',\n        employeeCount: 0,\n        headerName: ''\n      },\n      pendingTasks: {\n        askCount: 0,\n        resourceCount: 0\n      },\n      personalTasks: {\n        total: 0,\n        approved: 0,\n        pending: 0,\n        rejected: 0\n      },\n      departmentEmployees: []\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    }\n  },\n  created() {\n    this.loadNotices();\n    if (this.user.role === 'ADMIN') {\n      this.getMonthData();\n      this.getFinancialPie();\n      this.getFinancialLine();\n      this.getFinancialBar();\n    } else if (this.isHeader) {\n      this.loadDepartmentInfo();\n      this.loadPendingTasks();\n      this.loadDepartmentEmployees();\n    } else if (this.user.role === 'USER') {\n      this.loadDepartmentInfo();\n      this.loadPersonalTasks();\n    }\n  },\n  methods: {\n    loadNotices() {\n      // 根据用户登录状态选择合适的接口\n      const endpoint = this.user?.id ? '/notice/selectAll' : '/notice/public';\n      this.$request.get(endpoint).then(res => {\n        if (res.code === '200') {\n          this.notices = res.data || [];\n        } else {\n          this.$message.error('获取公告列表失败: ' + res.msg);\n          this.notices = [];\n        }\n      }).catch(error => {\n        console.error('获取公告列表失败:', error);\n        this.$message.error('获取公告列表时发生网络错误');\n        this.notices = [];\n      });\n    },\n    getMonthData() {\n      this.$request.get('/salary/getMonth').then(res => {\n        if (res.code === '200') {\n          this.monthData = res.data;\n          this.month = this.monthData[0].year;\n          this.getSalaryMonth(this.month);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getSalaryMonth(month) {\n      this.$request.get('/salary/getSalary/' + month).then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('salaryBar');\n          let myChart = echarts.init(chartDom);\n          barSalaryOptions.title.text = res.data.text;\n          barSalaryOptions.title.subtext = res.data.subtext;\n          barSalaryOptions.xAxis.data = res.data.xAxis;\n          barSalaryOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barSalaryOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialPie() {\n      this.$request.get('/financial/getPie').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          pieOptions.title.text = res.data.text;\n          pieOptions.title.subtext = res.data.subtext;\n          pieOptions.series[0].name = res.data.name;\n          pieOptions.series[0].data = res.data.data;\n          myChart.setOption(pieOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialLine() {\n      this.$request.get('/financial/getLine').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          lineOptions.title.text = res.data.text;\n          lineOptions.title.subtext = res.data.subtext;\n          lineOptions.xAxis.data = res.data.xAxis;\n          lineOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(lineOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    getFinancialBar() {\n      this.$request.get('/financial/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text;\n          barOptions.title.subtext = res.data.subtext;\n          barOptions.xAxis.data = res.data.xAxis;\n          barOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barOptions);\n        }\n      });\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200') {\n            this.departmentInfo.name = res.data.name;\n            this.departmentInfo.headerName = res.data.headerName || '未指定';\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentInfo.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量失败，请检查网络连接\");\n      });\n    },\n    loadPendingTasks() {\n      this.loadPendingAskTasks();\n      this.loadPendingResourceTasks();\n    },\n    loadPendingAskTasks() {\n      this.$request.get('/askapply/countPending', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.askCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批请假数据失败:\", error);\n        this.$message.error(\"获取待审批请假数据失败，请检查网络连接\");\n      });\n    },\n    loadPendingResourceTasks() {\n      this.$request.get('/resourceapply/countPending', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.resourceCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批资产数据失败:\", error);\n        this.$message.error(\"获取待审批资产数据失败，请检查网络连接\");\n      });\n    },\n    loadDepartmentEmployees() {\n      this.$request.get('/employee/selectByDepartment', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentEmployees = res.data || [];\n        }\n      }).catch(error => {\n        console.error(\"获取部门员工列表失败:\", error);\n        this.$message.error(\"获取部门员工列表失败，请检查网络连接\");\n      });\n    },\n    loadPersonalTasks() {\n      this.$request.get('/employee/applicationStats', {\n        params: {\n          employeeId: this.user.id\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.personalTasks = res.data || {\n            total: 0,\n            approved: 0,\n            pending: 0,\n            rejected: 0\n          };\n        }\n      }).catch(error => {\n        console.error(\"获取个人申请统计数据失败:\", error);\n        this.$message.error(\"获取个人申请统计数据失败，请检查网络连接\");\n      });\n    },\n    goToEmployeeList() {\n      this.$router.push('/user');\n    }\n  }\n};","map":{"version":3,"names":["echarts","WelcomeComponent","pieOptions","title","text","subtext","left","textStyle","color","tooltip","trigger","formatter","legend","orient","series","name","type","radius","center","data","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","lineOptions","xAxis","axisLine","lineStyle","axisLabel","yAxis","splitLine","grid","right","bottom","containLabel","smooth","areaStyle","graphic","LinearGradient","offset","barOptions","axisPointer","barWidth","borderRadius","barSalaryOptions","components","user","JSON","parse","localStorage","getItem","notices","month","monthData","departmentInfo","employeeCount","headerName","pendingTasks","askCount","resourceCount","personalTasks","total","approved","pending","rejected","departmentEmployees","computed","isHeader","level","role","includes","created","loadNotices","getMonthData","getFinancialPie","getFinancialLine","getFinancialBar","loadDepartmentInfo","loadPendingTasks","loadDepartmentEmployees","loadPersonalTasks","methods","endpoint","id","$request","get","then","res","code","$message","error","msg","catch","console","year","getSalaryMonth","chartDom","document","getElementById","myChart","init","setOption","departmentId","loadEmployeeCount","params","loadPendingAskTasks","loadPendingResourceTasks","employeeId","goToEmployeeList","$router","push"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 主管仪表盘 -->\n    <div v-if=\"isHeader\" class=\"dashboard-header\">\n      <el-card style=\"margin-bottom: 20px\">\n        <welcome-component :department-name=\"departmentInfo.name\" :department-header=\"departmentInfo.headerName\"></welcome-component>\n      </el-card>\n      \n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-s-custom\"></i> 部门管理</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ departmentInfo.name || '暂无数据' }}</div>\n              <div class=\"dashboard-title\">当前管理部门</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-user\"></i> 员工管理</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ departmentInfo.employeeCount || 0 }}</div>\n              <div class=\"dashboard-title\">部门员工数</div>\n            </div>\n          </el-card>\n        </el-col>\n        <el-col :span=\"8\">\n          <el-card shadow=\"hover\">\n            <div slot=\"header\">\n              <span><i class=\"el-icon-s-claim\"></i> 待办事项</span>\n            </div>\n            <div class=\"dashboard-item\">\n              <div class=\"dashboard-num\">{{ pendingTasks.askCount + pendingTasks.resourceCount }}</div>\n              <div class=\"dashboard-title\">待审批事项</div>\n              <div class=\"dashboard-detail\">\n                <el-tag size=\"small\" type=\"warning\">请假审批: {{ pendingTasks.askCount }}</el-tag>\n                <el-tag size=\"small\" type=\"warning\" style=\"margin-left: 10px\">资产审批: {{ pendingTasks.resourceCount }}</el-tag>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-s-grid\"></i> 部门员工</span>\n            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"goToEmployeeList\">查看全部</el-button>\n          </div>\n          <el-table :data=\"departmentEmployees\" stripe style=\"width: 100%\">\n            <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\n            <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\n            <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n            <el-table-column prop=\"level\" label=\"级别\">\n              <template slot-scope=\"scope\">\n                <el-tag size=\"mini\" v-if=\"scope.row.level === 'HEADER'\" type=\"success\">部门主管</el-tag>\n                <el-tag size=\"mini\" v-else-if=\"scope.row.level === 'EMPLOYEE'\" type=\"info\">普通员工</el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </div>\n\n      <!-- 公告列表 for Header -->\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-bell\"></i> 最新公告</span>\n          </div>\n          <el-timeline reverse>\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </el-card>\n      </div>\n    </div>\n\n    <!-- 员工仪表盘 -->\n    <div v-else-if=\"user.role === 'USER'\" class=\"dashboard-employee\">\n      <el-card style=\"margin-bottom: 20px\">\n        <welcome-component></welcome-component>\n      </el-card>\n\n      <!-- 公告列表 for User -->\n      <div style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div slot=\"header\">\n            <span><i class=\"el-icon-bell\"></i> 最新公告</span>\n          </div>\n          <el-timeline reverse>\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </el-card>\n      </div>\n    </div>\n\n    <!-- 管理员仪表盘 -->\n    <div v-else>\n      <div class=\"card\" style=\"padding: 15px\">\n        您好，{{ user?.name }}！欢迎使用本系统\n      </div>\n\n      <div style=\"display: flex; margin: 10px 0\">\n        <div style=\"width: 100%;\" class=\"card\">\n          <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\n          <div>\n            <el-timeline  reverse>\n              <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n                <el-popover\n                    placement=\"right\"\n                    width=\"200\"\n                    trigger=\"hover\"\n                    :content=\"item.content\">\n                  <span slot=\"reference\">{{ item.title }}</span>\n                </el-popover>\n              </el-timeline-item>\n            </el-timeline>\n          </div>\n        </div>\n      </div>\n      <div style=\"display: flex\" v-if=\"user.role === 'ADMIN'\">\n        <div id=\"pie\" style=\"height: 450px; flex: 1\" class=\"card\"></div>\n        <div style=\"height: 450px; flex: 1;\" class=\"card\">\n          <el-select v-model=\"month\" style=\"width: 50%\" @change=\"getSalaryMonth(month)\">\n            <el-option v-for=\"item in monthData\" :key=\"item.year\" :label=\"item.year\" :value=\"item.year\"></el-option>\n          </el-select>\n          <div id=\"salaryBar\" style=\"height: 400px; padding-top: 15px\"></div>\n        </div>\n      </div>\n      <div style=\"margin-top: 10px; display: flex\" v-if=\"user.role === 'ADMIN'\">\n        <div id=\"line\" style=\"height: 400px; flex: 1\" class=\"card\"></div>\n        <div id=\"bar\" style=\"height: 400px; flex: 1\" class=\"card\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nimport WelcomeComponent from \"@/components/Welcome.vue\";\n\nlet pieOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} <br/>{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left',\n    textStyle: {\n      color: '#606266'\n    }\n  },\n  color: ['#5CB8E6', '#82C97B', '#F2C379', '#F56C6C', '#A0D9EF', '#91cc75', '#fac858', '#ee6666', '#73c0de'], // 清新蓝主题色系\n  series: [\n    {\n      name: '', // 鼠标移上去显示内容\n      type: 'pie',\n      radius: '50%',\n      center: ['50%', '60%'],\n      data: [], // Initialize with empty data\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n}\nlet lineOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [], // Initialize with empty data\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' },\n    splitLine: { lineStyle: { color: '#EBEEF5' } }\n  },\n  tooltip: {\n    trigger: 'axis' // Use axis trigger for line chart\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [\n    {\n      data: [], // Initialize with empty data\n      type: 'line',\n      smooth: true,\n      itemStyle: { color: '#5CB8E6' }, // 主色调\n      lineStyle: { color: '#5CB8E6' },\n      areaStyle: { // Optional: add gradient area style\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: 'rgba(92, 184, 230, 0.5)' // Lighter blue gradient start\n            },\n            {\n              offset: 1,\n              color: 'rgba(92, 184, 230, 0.1)' // Lighter blue gradient end\n            }\n          ])\n        }\n    }\n  ]\n}\nlet barOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [], // Initialize with empty data\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' },\n    splitLine: { lineStyle: { color: '#EBEEF5' } }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { // Optional: customize tooltip pointer\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [\n    {\n      data: [], // Initialize with empty data\n      type: 'bar',\n      barWidth: '60%', // Adjust bar width\n      itemStyle: {\n        color: '#5CB8E6', // 主色调\n        borderRadius: [4, 4, 0, 0] // Optional: add border radius to top\n      },\n      emphasis: {\n        itemStyle: {\n          color: '#4AA8D8' // 悬停时稍深\n        }\n      }\n    }\n  ]\n}\nlet barSalaryOptions = {\n  title: {\n    text: '', // 主标题\n    subtext: '', // 副标题\n    left: 'center',\n    textStyle: {\n      color: '#303133'\n    }\n  },\n  xAxis: {\n    type: 'category',\n    data: [], // Initialize with empty data\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: { lineStyle: { color: '#A8ABB2' } },\n    axisLabel: { color: '#606266' },\n    splitLine: { lineStyle: { color: '#EBEEF5' } }\n  },\n  tooltip: {\n    trigger: 'axis',\n    axisPointer: { type: 'shadow' }\n  },\n  grid: {\n    left: '3%',\n    right: '4%',\n    bottom: '3%',\n    containLabel: true\n  },\n  series: [\n    {\n      name: '部门薪资',\n      data: [], // Initialize with empty data\n      type: 'bar',\n      barWidth: '40%',\n      itemStyle: {\n        color: '#82C97B' // 辅助色-绿色\n      },\n      emphasis: {\n        itemStyle: {\n          color: '#67c23a'\n        }\n      }\n    }\n  ]\n}\n\nexport default {\n  name: 'Home',\n  components: {\n    WelcomeComponent\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: [],\n      month: null,\n      monthData: [],\n      departmentInfo: {\n        name: '',\n        employeeCount: 0,\n        headerName: ''\n      },\n      pendingTasks: {\n        askCount: 0,\n        resourceCount: 0\n      },\n      personalTasks: {\n        total: 0,\n        approved: 0,\n        pending: 0,\n        rejected: 0\n      },\n      departmentEmployees: []\n    }\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || \n             this.user.role === 'HEADER' || \n             (this.user.level && this.user.level.includes('主管'));\n    }\n  },\n  created() {\n    this.loadNotices();\n    \n    if (this.user.role === 'ADMIN') {\n      this.getMonthData()\n      this.getFinancialPie()\n      this.getFinancialLine()\n      this.getFinancialBar()\n    } else if (this.isHeader) {\n      this.loadDepartmentInfo();\n      this.loadPendingTasks();\n      this.loadDepartmentEmployees();\n    } else if (this.user.role === 'USER') {\n      this.loadDepartmentInfo();\n      this.loadPersonalTasks();\n    }\n  },\n  methods: {\n    loadNotices() {\n      // 根据用户登录状态选择合适的接口\n      const endpoint = this.user?.id ? '/notice/selectAll' : '/notice/public';\n      this.$request.get(endpoint).then(res => {\n        if (res.code === '200') {\n          this.notices = res.data || [];\n        } else {\n          this.$message.error('获取公告列表失败: ' + res.msg);\n          this.notices = [];\n        }\n      }).catch(error => {\n        console.error('获取公告列表失败:', error);\n        this.$message.error('获取公告列表时发生网络错误');\n        this.notices = [];\n      });\n    },\n    getMonthData() {\n      this.$request.get('/salary/getMonth').then(res => {\n        if (res.code === '200') {\n          this.monthData = res.data\n          this.month = this.monthData[0].year\n          this.getSalaryMonth(this.month)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getSalaryMonth(month) {\n      this.$request.get('/salary/getSalary/' + month).then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('salaryBar');\n          let myChart = echarts.init(chartDom);\n          barSalaryOptions.title.text = res.data.text\n          barSalaryOptions.title.subtext = res.data.subtext\n          barSalaryOptions.xAxis.data = res.data.xAxis\n          barSalaryOptions.series[0].data = res.data.yAxis\n          myChart.setOption(barSalaryOptions)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialPie() {\n      this.$request.get('/financial/getPie').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('pie');\n          let myChart = echarts.init(chartDom);\n          pieOptions.title.text = res.data.text\n          pieOptions.title.subtext = res.data.subtext\n          pieOptions.series[0].name = res.data.name\n          pieOptions.series[0].data = res.data.data\n          myChart.setOption(pieOptions);\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialLine() {\n      this.$request.get('/financial/getLine').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('line');\n          let myChart = echarts.init(chartDom);\n          lineOptions.title.text = res.data.text\n          lineOptions.title.subtext = res.data.subtext\n          lineOptions.xAxis.data = res.data.xAxis\n          lineOptions.series[0].data = res.data.yAxis\n          myChart.setOption(lineOptions)\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    getFinancialBar() {\n      this.$request.get('/financial/getBar').then(res => {\n        if (res.code === '200') {\n          let chartDom = document.getElementById('bar');\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text\n          barOptions.title.subtext = res.data.subtext\n          barOptions.xAxis.data = res.data.xAxis\n          barOptions.series[0].data = res.data.yAxis\n          myChart.setOption(barOptions)\n        }\n      })\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200') {\n            this.departmentInfo.name = res.data.name;\n            this.departmentInfo.headerName = res.data.headerName || '未指定';\n            \n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          this.$message.error(\"获取部门信息失败，请检查网络连接\");\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentInfo.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n        this.$message.error(\"获取员工数量失败，请检查网络连接\");\n      });\n    },\n    loadPendingTasks() {\n      this.loadPendingAskTasks();\n      this.loadPendingResourceTasks();\n    },\n    loadPendingAskTasks() {\n      this.$request.get('/askapply/countPending', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.askCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批请假数据失败:\", error);\n        this.$message.error(\"获取待审批请假数据失败，请检查网络连接\");\n      });\n    },\n    loadPendingResourceTasks() {\n      this.$request.get('/resourceapply/countPending', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.pendingTasks.resourceCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取待审批资产数据失败:\", error);\n        this.$message.error(\"获取待审批资产数据失败，请检查网络连接\");\n      });\n    },\n    loadDepartmentEmployees() {\n      this.$request.get('/employee/selectByDepartment', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.departmentEmployees = res.data || [];\n        }\n      }).catch(error => {\n        console.error(\"获取部门员工列表失败:\", error);\n        this.$message.error(\"获取部门员工列表失败，请检查网络连接\");\n      });\n    },\n    loadPersonalTasks() {\n      this.$request.get('/employee/applicationStats', {\n        params: { employeeId: this.user.id }\n      }).then(res => {\n        if (res.code === '200') {\n          this.personalTasks = res.data || {\n            total: 0,\n            approved: 0,\n            pending: 0,\n            rejected: 0\n          };\n        }\n      }).catch(error => {\n        console.error(\"获取个人申请统计数据失败:\", error);\n        this.$message.error(\"获取个人申请统计数据失败，请检查网络连接\");\n      });\n    },\n    goToEmployeeList() {\n      this.$router.push('/user');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-header .el-col,\n.dashboard-employee .el-col,\n.card + div .el-col {\n  margin-bottom: 20px;\n}\n\n.dashboard-item {\n  text-align: center;\n}\n\n.dashboard-num {\n  font-size: 24px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.dashboard-title {\n  font-size: 14px;\n  color: #606266;\n  margin-top: 5px;\n}\n\n.dashboard-detail {\n  margin-top: 10px;\n}\n\n/* Responsive adjustments for smaller screens */\n@media (max-width: 768px) {\n  .el-row {\n    margin-left: -10px !important;\n    margin-right: -10px !important;\n  }\n  .el-col,\n  .el-col-8 {\n    width: 100% !important; /* Make columns full width */\n    padding-left: 10px !important;\n    padding-right: 10px !important;\n    margin-bottom: 15px;\n  }\n\n  .dashboard-header .el-card,\n  .dashboard-employee .el-card,\n  .card,\n  div[style*=\"display: flex\"] > .card {\n    margin-bottom: 15px !important;\n  }\n\n  div[style*=\"display: flex\"] {\n    flex-direction: column;\n  }\n\n  div[id^=\"pie\"],\n  div[id^=\"salaryBar\"],\n  div[id^=\"line\"],\n  div[id^=\"bar\"] {\n    height: 300px !important; /* Adjust chart height */\n    flex: none !important;\n    width: 100% !important;\n  }\n\n  .el-select {\n    width: 100% !important;\n  }\n\n  .el-table {\n    font-size: 12px; /* Reduce table font size */\n  }\n\n  .el-table th,\n  .el-table td {\n    padding: 6px 0; /* Reduce padding in table cells */\n  }\n\n  .el-timeline-item__timestamp {\n    font-size: 12px;\n  }\n\n  .el-popover span[slot=\"reference\"] {\n    font-size: 13px;\n  }\n\n  .welcome-card .user-info h2 {\n    font-size: 1.2em;\n  }\n  .welcome-card .user-info p {\n    font-size: 0.9em;\n  }\n}\n</style>\n\n<style scoped>\n.card {\n  background-color: white;\n  border-radius: 5px;\n  padding: 15px;\n  margin: 5px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n.dashboard-item {\n  text-align: center;\n  padding: 10px 0;\n}\n.dashboard-num {\n  font-size: 28px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-bottom: 10px;\n}\n.dashboard-title {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 10px;\n}\n.dashboard-detail {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}