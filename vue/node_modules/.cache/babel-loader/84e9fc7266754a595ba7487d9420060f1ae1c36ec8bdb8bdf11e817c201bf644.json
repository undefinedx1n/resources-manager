{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: \"Welcome\",\n  props: {\n    departmentName: {\n      type: String,\n      default: ''\n    },\n    departmentHeader: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentInfo: {\n        name: this.departmentName || '',\n        headerName: this.departmentHeader || '未指定'\n      }\n    };\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || this.user.role === 'HEADER' || this.user.level && this.user.level.includes('主管');\n    },\n    displayDepartmentName() {\n      return this.departmentInfo.name || this.departmentName || this.user.departmentName || '未分配部门';\n    },\n    displayDepartmentHeader() {\n      return this.departmentInfo.headerName || this.departmentHeader || '未指定';\n    }\n  },\n  watch: {\n    departmentName: {\n      handler(newVal) {\n        if (newVal) {\n          this.departmentInfo.name = newVal;\n        }\n      },\n      immediate: true\n    },\n    departmentHeader: {\n      handler(newVal) {\n        if (newVal) {\n          this.departmentInfo.headerName = newVal;\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    if (!this.departmentName || !this.departmentHeader) {\n      this.loadDepartmentInfo();\n    }\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200' && res.data) {\n            // 更新部门名称\n            this.departmentInfo.name = res.data.name;\n\n            // 获取部门主管信息\n            if (res.data.employeeId) {\n              this.$request.get('/employee/selectById/' + res.data.employeeId).then(empRes => {\n                if (empRes.code === '200' && empRes.data) {\n                  this.departmentInfo.headerName = empRes.data.name;\n                }\n              }).catch(() => {\n                this.findDepartmentManager();\n              });\n            } else {\n              this.findDepartmentManager();\n            }\n\n            // 如果是主管，获取部门员工数量\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          // 如果获取部门信息失败，尝试从员工中查找主管\n          this.findDepartmentManager();\n        });\n      }\n    },\n    findDepartmentManager() {\n      if (this.user.departmentId) {\n        this.$request.get('/employee/selectByDepartment', {\n          params: {\n            departmentId: this.user.departmentId\n          }\n        }).then(res => {\n          if (res.code === '200' && res.data && res.data.length > 0) {\n            const manager = res.data.find(emp => emp.level === '主管' || emp.level === 'HEADER' || emp.level && emp.level.includes('主管'));\n            if (manager) {\n              this.departmentInfo.headerName = manager.name;\n            }\n          }\n        }).catch(error => {\n          console.error(\"查找部门主管失败:\", error);\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: {\n          departmentId: this.user.departmentId\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","departmentName","type","String","default","departmentHeader","data","user","JSON","parse","localStorage","getItem","currentTime","Date","toLocaleString","employeeCount","departmentInfo","headerName","computed","isHeader","level","role","includes","displayDepartmentName","displayDepartmentHeader","watch","handler","newVal","immediate","created","updateTime","setInterval","loadDepartmentInfo","methods","goToPage","path","$router","push","departmentId","$request","get","then","res","code","employeeId","empRes","catch","findDepartmentManager","loadEmployeeCount","error","console","params","length","manager","find","emp"],"sources":["src/components/Welcome.vue"],"sourcesContent":["<template>\n  <div class=\"welcome-container\">\n    <div class=\"welcome-header\">\n      <h1>欢迎使用企业人力资源管理系统</h1>\n      <p class=\"welcome-time\">{{ currentTime }}</p>\n    </div>\n    \n    <!-- 主管欢迎信息 -->\n    <div v-if=\"isHeader\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-s-custom\"></i> 部门主管工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b> 主管，您好！</p>\n          <p>您现在管理的是 <b>{{ displayDepartmentName }}</b> 部门，共有员工 {{ employeeCount }} 人。</p>\n          <p>您的主要职责：</p>\n          <ul>\n            <li>审批本部门员工的请假申请</li>\n            <li>审批本部门员工的资产申请</li>\n            <li>管理和监督本部门的员工</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/askApply')\">部门请假审批</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/resourcesApply')\">部门资产审批</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/user')\">员工管理</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n    \n    <!-- 普通员工欢迎信息 -->\n    <div v-else-if=\"user.role === 'USER'\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-user\"></i> 员工工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b>，您好！</p>\n          <p>您属于 <b>{{ displayDepartmentName }}</b> 部门，您的部门主管是 <b>{{ displayDepartmentHeader }}</b>。</p>\n          <p>您可以进行的主要操作：</p>\n          <ul>\n            <li>查看个人薪资和考勤信息</li>\n            <li>提交请假申请</li>\n            <li>申请使用公司资产</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/askRecord')\">请假申请</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/resources')\">资产申请</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/salary')\">薪资信息</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n    \n    <!-- 管理员欢迎信息 -->\n    <div v-else-if=\"user.role === 'ADMIN'\" class=\"role-welcome\">\n      <el-card shadow=\"hover\" class=\"role-card\">\n        <div slot=\"header\" class=\"role-header\">\n          <i class=\"el-icon-s-tools\"></i> 系统管理员工作台\n        </div>\n        <div class=\"role-content\">\n          <p>尊敬的 <b>{{ user.name }}</b> 管理员，您好！</p>\n          <p>您拥有系统的全部管理权限。</p>\n          <p>您的主要职责：</p>\n          <ul>\n            <li>管理公司部门和员工信息</li>\n            <li>最终审批员工的请假和资产申请</li>\n            <li>管理系统资源和权限</li>\n          </ul>\n          <div class=\"role-actions\">\n            <el-button type=\"primary\" @click=\"goToPage('/department')\">部门管理</el-button>\n            <el-button type=\"success\" @click=\"goToPage('/user')\">员工管理</el-button>\n            <el-button type=\"warning\" @click=\"goToPage('/askApply')\">请假审批</el-button>\n            <el-button type=\"info\" @click=\"goToPage('/resourcesApply')\">资产审批</el-button>\n          </div>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Welcome\",\n  props: {\n    departmentName: {\n      type: String,\n      default: ''\n    },\n    departmentHeader: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      currentTime: new Date().toLocaleString(),\n      employeeCount: 0,\n      departmentInfo: {\n        name: this.departmentName || '',\n        headerName: this.departmentHeader || '未指定'\n      }\n    }\n  },\n  computed: {\n    isHeader() {\n      return this.user.level === 'HEADER' || \n             this.user.role === 'HEADER' || \n             (this.user.level && this.user.level.includes('主管'));\n    },\n    displayDepartmentName() {\n      return this.departmentInfo.name || this.departmentName || this.user.departmentName || '未分配部门';\n    },\n    displayDepartmentHeader() {\n      return this.departmentInfo.headerName || this.departmentHeader || '未指定';\n    }\n  },\n  watch: {\n    departmentName: {\n      handler(newVal) {\n        if (newVal) {\n          this.departmentInfo.name = newVal;\n        }\n      },\n      immediate: true\n    },\n    departmentHeader: {\n      handler(newVal) {\n        if (newVal) {\n          this.departmentInfo.headerName = newVal;\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.updateTime();\n    setInterval(this.updateTime, 1000);\n    if (!this.departmentName || !this.departmentHeader) {\n      this.loadDepartmentInfo();\n    }\n  },\n  methods: {\n    updateTime() {\n      this.currentTime = new Date().toLocaleString();\n    },\n    goToPage(path) {\n      this.$router.push(path);\n    },\n    loadDepartmentInfo() {\n      if (this.user.departmentId) {\n        this.$request.get('/department/findById/' + this.user.departmentId).then(res => {\n          if (res.code === '200' && res.data) {\n            // 更新部门名称\n            this.departmentInfo.name = res.data.name;\n            \n            // 获取部门主管信息\n            if (res.data.employeeId) {\n              this.$request.get('/employee/selectById/' + res.data.employeeId).then(empRes => {\n                if (empRes.code === '200' && empRes.data) {\n                  this.departmentInfo.headerName = empRes.data.name;\n                }\n              }).catch(() => {\n                this.findDepartmentManager();\n              });\n            } else {\n              this.findDepartmentManager();\n            }\n\n            // 如果是主管，获取部门员工数量\n            if (this.isHeader) {\n              this.loadEmployeeCount();\n            }\n          }\n        }).catch(error => {\n          console.error(\"获取部门信息失败:\", error);\n          // 如果获取部门信息失败，尝试从员工中查找主管\n          this.findDepartmentManager();\n        });\n      }\n    },\n    findDepartmentManager() {\n      if (this.user.departmentId) {\n        this.$request.get('/employee/selectByDepartment', {\n          params: { departmentId: this.user.departmentId }\n        }).then(res => {\n          if (res.code === '200' && res.data && res.data.length > 0) {\n            const manager = res.data.find(emp => \n              emp.level === '主管' || emp.level === 'HEADER' || \n              (emp.level && emp.level.includes('主管'))\n            );\n            if (manager) {\n              this.departmentInfo.headerName = manager.name;\n            }\n          }\n        }).catch(error => {\n          console.error(\"查找部门主管失败:\", error);\n        });\n      }\n    },\n    loadEmployeeCount() {\n      this.$request.get('/employee/count', {\n        params: { departmentId: this.user.departmentId }\n      }).then(res => {\n        if (res.code === '200') {\n          this.employeeCount = res.data || 0;\n        }\n      }).catch(error => {\n        console.error(\"获取员工数量失败:\", error);\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.welcome-container {\n  padding: 20px;\n}\n.welcome-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n.welcome-time {\n  color: #666;\n  font-size: 16px;\n}\n.role-welcome {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.role-card {\n  border-radius: 6px;\n}\n.role-header {\n  font-weight: bold;\n  font-size: 18px;\n}\n.role-content {\n  padding: 10px 0;\n}\n.role-content ul {\n  margin: 15px 0;\n  padding-left: 20px;\n}\n.role-content li {\n  line-height: 24px;\n  margin-bottom: 8px;\n}\n.role-actions {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n.role-actions .el-button {\n  margin: 5px 10px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}